<Page x:Class="admintickets.Views.ViewTickets"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:admintickets.Converters"
      xmlns:viewmodel="clr-namespace:admintickets.ViewModels"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d"
      d:DataContext="{d:DesignInstance Type=viewmodel:VMTickets}"
      Style="{StaticResource {x:Type Page}}">
    
    <Page.Resources>
        <!-- Converter to check if TicketPayment exists -->
        <local:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
    </Page.Resources>
    
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>   <!-- Header -->
            <RowDefinition Height="Auto"/>   <!-- Filters -->
            <RowDefinition Height="*"/>      <!-- Tickets Grid -->
            <RowDefinition Height="Auto"/>   <!-- Pagination -->
        </Grid.RowDefinitions>

        <!-- Header -->
        <materialDesign:Card Grid.Row="0" Padding="10" Margin="0,0,0,10">
            <TextBlock Text="{DynamicResource ticketManagement}" FontSize="20" FontWeight="Bold" VerticalAlignment="Center"/>
        </materialDesign:Card>

        <!-- Filters Panel -->
        <materialDesign:Card Grid.Row="1" Padding="16" Margin="0,0,0,10">
            <Expander Header="{DynamicResource filters}" IsExpanded="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Search Box -->
                    <TextBox Grid.Column="0" Grid.Row="0" Margin="5"
                             materialDesign:HintAssist.Hint="{DynamicResource search}"
                             Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return" Command="{Binding ApplyFiltersCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>

                    <!-- Date Range - Start -->
                    <DatePicker Grid.Column="1" Grid.Row="0" Margin="5"
                                materialDesign:HintAssist.Hint="{DynamicResource startDate}"
                                SelectedDate="{Binding StartDate}"/>

                    <!-- Date Range - End -->
                    <DatePicker Grid.Column="2" Grid.Row="0" Margin="5"
                                materialDesign:HintAssist.Hint="{DynamicResource endDate}"
                                SelectedDate="{Binding EndDate}"/>

                    <!-- Payment Status Filter -->
                    <ComboBox Grid.Column="0" Grid.Row="1" Margin="5"
                              materialDesign:HintAssist.Hint="{DynamicResource paymentStatus}"
                              ItemsSource="{Binding PaymentStatusOptions}"
                              SelectedItem="{Binding PaymentStatus}"/>

                    <!-- Buttons -->
                    <StackPanel Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" 
                              Orientation="Horizontal" VerticalAlignment="Center">
                        <Button Command="{Binding ApplyFiltersCommand}" Margin="5"
                                Content="{DynamicResource apply}"/>
                        <Button Command="{Binding ClearFiltersCommand}" Margin="5"
                                Content="{DynamicResource clear}" 
                                Style="{StaticResource MaterialDesignOutlinedButton}"/>
                    </StackPanel>
                </Grid>
            </Expander>
        </materialDesign:Card>

        <!-- Tickets Grid -->
        <materialDesign:Card Grid.Row="2" Padding="10">
            <DataGrid ItemsSource="{Binding Tickets}" AutoGenerateColumns="False"
                      CanUserAddRows="False" IsReadOnly="True"
                      CanUserSortColumns="True" 
                      materialDesign:DataGridAssist.CellPadding="13"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{DynamicResource code}" Binding="{Binding TicketNumber}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <EventSetter Event="Click" Handler="DataGridColumnHeader_Click"/>
                                <Setter Property="Tag" Value="TicketNumber"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="{DynamicResource hospital}" Binding="{Binding Hospital.Name}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <EventSetter Event="Click" Handler="DataGridColumnHeader_Click"/>
                                <Setter Property="Tag" Value="HospitalName"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <DataGridTextColumn Header="{DynamicResource creationTime}" 
                                        Binding="{Binding CreationTime, StringFormat={}{0:yyyy-MM-dd HH:mm}}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <EventSetter Event="Click" Handler="DataGridColumnHeader_Click"/>
                                <Setter Property="Tag" Value="CreationTime"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <DataGridTextColumn Header="{DynamicResource paymentTime}" 
                                        Binding="{Binding PaymentTime, StringFormat={}{0:yyyy-MM-dd HH:mm}}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <EventSetter Event="Click" Handler="DataGridColumnHeader_Click"/>
                                <Setter Property="Tag" Value="PaymentTime"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <DataGridTextColumn Header="{DynamicResource departureTime}" 
                                        Binding="{Binding DepartureTime, StringFormat={}{0:yyyy-MM-dd HH:mm}}" Width="*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <EventSetter Event="Click" Handler="DataGridColumnHeader_Click"/>
                                <Setter Property="Tag" Value="DepartureTime"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <DataGridTemplateColumn Header="{DynamicResource actions}" Width="350">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>   
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="{DynamicResource viewPayment}" 
                                            Command="{Binding DataContext.ViewPaymentCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                            CommandParameter="{Binding}"
                                            IsEnabled="{Binding TicketPayment, Converter={StaticResource NullToBooleanConverter}}"/>
                                    
                                    <Button Command="{Binding DataContext.PrintTicketAsPdfCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                            CommandParameter="{Binding}"
                                            Style="{StaticResource MaterialDesignFlatButton}">
                                        <materialDesign:PackIcon Kind="FilePdfBox" />
                                    </Button>
                                    
                                    <Button Command="{Binding DataContext.PrintTicketAsPngCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                            CommandParameter="{Binding}"
                                            Style="{StaticResource MaterialDesignFlatButton}">
                                        <materialDesign:PackIcon Kind="ImageOutline" />
                                    </Button>
                                    
                                    <Button Command="{Binding DataContext.SetTicketAsPaidCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                            CommandParameter="{Binding}"
                                            Style="{StaticResource MaterialDesignFlatButton}"
                                            Visibility="{Binding PaymentTime, Converter={StaticResource NullToBooleanConverter}, ConverterParameter=invert}">
                                        <materialDesign:PackIcon Kind="CheckBold" />
                                    </Button>

                                    <Button Command="{Binding DataContext.SetTicketAsUnpaidCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                            CommandParameter="{Binding}"
                                            Style="{StaticResource MaterialDesignFlatButton}"
                                            Visibility="{Binding PaymentTime, Converter={StaticResource NullToBooleanConverter}}">
                                        <materialDesign:PackIcon Kind="CloseCircleOutline" />
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </materialDesign:Card>

        <!-- Pagination -->
        <materialDesign:Card Grid.Row="3" Padding="10" Margin="0,10,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Page Size -->
                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="{DynamicResource itemsPerPage}" VerticalAlignment="Center" Margin="0,0,8,0"/>
                    <ComboBox SelectedValue="{Binding ItemsPerPage}" 
                              SelectedValuePath="Content"
                              SelectionChanged="ItemsPerPage_SelectionChanged" 
                              Width="60">
                        <ComboBoxItem Content="10"/>
                        <ComboBoxItem Content="25"/>
                        <ComboBoxItem Content="50"/>
                        <ComboBoxItem Content="100"/>
                    </ComboBox>
                </StackPanel>

                <!-- Page Summary -->
                <TextBlock Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Run Text="{DynamicResource showing}"/>
                    <Run Text="{Binding Tickets.Count, Mode=OneWay}"/>
                    <Run Text="{DynamicResource of}"/>
                    <Run Text="{Binding TotalItems, Mode=OneWay}"/>
                    <Run Text="{DynamicResource items}"/>
                </TextBlock>

                <!-- Page Navigation -->
                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Command="{Binding FirstPageCommand}" Margin="2,0"
                            Style="{StaticResource MaterialDesignIconButton}">
                        <materialDesign:PackIcon Kind="PageFirst" />
                    </Button>
                    <Button Command="{Binding PreviousPageCommand}" Margin="2,0"
                            Style="{StaticResource MaterialDesignIconButton}">
                        <materialDesign:PackIcon Kind="ChevronLeft" />
                    </Button>
                    <TextBlock VerticalAlignment="Center" Margin="8,0">
                        <Run Text="{Binding CurrentPage}"/>
                        <Run Text="/"/>
                        <Run Text="{Binding TotalPages}"/>
                    </TextBlock>
                    <Button Command="{Binding NextPageCommand}" Margin="2,0"
                            Style="{StaticResource MaterialDesignIconButton}">
                        <materialDesign:PackIcon Kind="ChevronRight" />
                    </Button>
                    <Button Command="{Binding LastPageCommand}" Margin="2,0"
                            Style="{StaticResource MaterialDesignIconButton}">
                        <materialDesign:PackIcon Kind="PageLast" />
                    </Button>
                </StackPanel>
            </Grid>
        </materialDesign:Card>
    </Grid>
</Page>
